/* 
 * Limepay API
 *
 * Initial build 2022-07-23
 *
 * OpenAPI spec version: 2017-03-01
 * 
 * Generated by: https://selectsystems.com.au
 */

using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace LimepayApi.Net.Models
{
    /// <summary>
    /// Order
    /// </summary>
    [DataContract]
    public partial class CreateOrderInvoiceRequest :  IEquatable<CreateOrderInvoiceRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateOrderRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CreateOrderInvoiceRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateOrderRequest" /> class.
        /// </summary>
        /// <param name="SendSms">Send sms</param>
        /// <param name="SendEmail">Send email</param>
        /// <param name="OrderRequest">OrderRequest (required)</param>
        public CreateOrderInvoiceRequest(
            bool SendSms = default(bool),
            bool SendEmail = default(bool),
            CreateOrderRequest OrderRequest = default(CreateOrderRequest))
        {
 
            this.SendSms = SendSms;
            this.SendEmail = SendEmail;
            this.OrderRequest = OrderRequest;
        }

        /// <summary>
        /// Gets or Sets SendSms
        /// </summary>
        [DataMember(Name = "sendSms", EmitDefaultValue = false)]
        public bool SendSms { get; set; }

        /// <summary>
        /// Gets or Sets SendEmail
        /// </summary>
        [DataMember(Name= "SendEmail", EmitDefaultValue=false)]
        public bool SendEmail { get; set; }

        /// <summary>
        /// Gets or Sets OrderRequest
        /// </summary>
        [DataMember(Name = "orderRequest", EmitDefaultValue = false)]
        public CreateOrderRequest OrderRequest { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Order {\n");
            sb.Append("  SendSms: ").Append(SendSms).Append("\n");
            sb.Append("  SendEmail: ").Append(SendEmail).Append("\n");
            sb.Append("  OrderRequest: ").Append(OrderRequest).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as CreateOrderRequest);
        }

        /// <summary>
        /// Returns true if Order instances are equal
        /// </summary>
        /// <param name="other">Instance of Order to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CreateOrderInvoiceRequest other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return
                (
                    this.SendSms == other.SendSms ||
                    this.SendSms.Equals(other.SendSms)
                ) &&
                (
                    this.SendEmail == other.SendEmail ||
                    this.SendEmail.Equals(other.SendEmail)
                ) &&
                (
                    this.OrderRequest == other.OrderRequest ||
                    this.OrderRequest.Equals(other.OrderRequest)
                );
        }
        

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                hash = hash * 59 + this.SendSms.GetHashCode();
                hash = hash * 59 + this.SendEmail.GetHashCode();
                if (this.OrderRequest != null)
                    hash = hash * 59 + this.OrderRequest.GetHashCode();
                return hash;
            }
        }

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        { 
            yield break;
        }
    }

}
